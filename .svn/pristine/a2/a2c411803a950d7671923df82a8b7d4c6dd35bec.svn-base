<template>
  <div class="fillsass">
    <div class="filltop">
      4.&ensp;近期行程
    </div>
    <div class="sasstop">
      <img src="../../../assets/imgs/xfill4_11.png">
      <div class="sasstop_text">新冠肺炎可防可治，越早诊断，治疗效果越好，为避免贻误诊治，传染家人，请务必准确填写以下信息！</div>
    </div>
    <div class="sass_tccx">
      <img src="../../../assets/imgs/x_tccx.png"/>
    </div>
    <div class="cqjz">
      <div class="cqjz_title">*1.你的长期居住地是</div>
      <div class="cqjzinput" @click="selectcqaddress">{{cqaddress==='null-null-null'?'请输入居所':cqaddress }}</div>
      <van-popup
        v-model="cqaddressshow"
        position="bottom"
      >
        <van-area :area-list="areaList1"
                  title="标题"
                  @confirm="confirmcqaddress"
                  @cancel="canceldate"
                  value="110101"
        />
      </van-popup>
    </div>
    <div class="line"></div>
    <div class="sassjourney">
      <div class="sassjourney_top">*2.近一月内是否：
        <div class="top_sass" @click="linkDownload('https://broccoli.uc.cn/apps/feiyansearch/routes/d_beY5eo')"></div>
      </div>
      <div class="sass_tip">(可多选，若无以下情况，直接点击下一步)</div>
      <div class="select"><img :src="is1==='true'?select1:select2" @click="totouch(1,'fkxxOptionsA','tripDesc')">
        <div class="select_name1">1.有外地或疫区居留史</div>
      </div>
      <div class="sassyq" v-for="(item,index) in yqdesclist">
        <div class="sassyq_time">{{item.time}}</div>
        <div class="sassyq_area">{{item.area}}</div>
        <div class="sassyq_desc"><div class="sassyq_desc_d">{{item.desc}}</div> <div @click="toyqdelete(index)"><img src="../../../assets/imgs/x_fillsassdelete.png"/></div></div>
      </div>
      <div class="seleto" v-show="is1==='true'" v-for="(item,index) in yqlist">
        曾居留城市
        <div class="selectocityinp">
        <div class="selecto_city" @click="selectcity">{{livecity==='null-null'?'请输入城市':livecity}}</div>
        <div class="yqadd" @click="yqaddclick(index)"></div>
        </div>
        <van-popup
          v-model="liveshow"
          position="bottom"
        >
          <van-area :area-list="areaList1"
                    title="标题"
                    @confirm="confirmlive"
                    @cancel="canceldate"
                    value="420100"
          />
        </van-popup>
        居留时间段
        <div class="select_time">
          <div class="select_time_o" @click="showstart">{{stime===''?'':stime}}</div>
          <van-popup
            v-model="isstart"
            position="bottom"
          >
            <van-datetime-picker
              v-model="currentDate"
              type="date"
              :min-date="minDate"
              :max-date="maxDate"
              @confirm="confirmstart"
              @cancel="canceldate"
            />
          </van-popup>
          <div class="s_line"></div>
          <div class="select_time_o" @click="showend">{{etime===''?'':etime}}</div>
          <van-popup
            v-model="isend"
            position="bottom"
          >
            <van-datetime-picker
              v-model="currentDate"
              type="date"
              :min-date="minDate"
              :max-date="maxDate"
              @confirm="confirmend"
              @cancel="canceldate"
            />
          </van-popup>
        </div>
        <div class="select_desc"><textarea :placeholder="ptip" v-model="tripDesc" @focus="tofocus" @blur="toblur"></textarea></div>
      </div>
      <div class="select"><img :src="is2==='true'?select1:select2"
                               @click="totouch(2,'fkxxOptionsB','fkxxOptionsBDesc')">
        <div class="select_name2">2.接触过来自湖北、温州...的亲友或其他人</div>
      </div>
      <div class="selectt" v-show="is2==='true'">
        <div class="select_desc2"><textarea :placeholder="ptip1" v-model="fkxxOptionsBDesc" @focus="tofocus1" @blur="toblur1"></textarea></div>
      </div>
      <div class="select"><img :src="is3==='true'?select1:select2"
                               @click="totouch(3,'fkxxOptionsC','fkxxOptionsCDesc')">
        <div class="select_name3">3.接触过有以下症状的病人： 发热37.5℃ 以上且（或）伴有咳嗽、乏力、四肢酸 痛、头痛、腹泻等。</div>
      </div>
      <div class="selectth" v-show="is3==='true'">
        <div class="select_desc3"><textarea :placeholder="ptip2" v-model="fkxxOptionsCDesc" @focus="tofocus2" @blur="toblur2"> </textarea></div>
      </div>
      <div class="select"><img :src="is4==='true'?select1:select2"
                               @click="totouch(4,'fkxxOptionsD','fkxxOptionsDDesc')">
        <div class="select_name4">4.有前往过人员密集处或封闭环境（如 电影院、棋牌室、网吧等）</div>
      </div>
      <div class="selectf" v-show="is4==='true'">
        <div class="select_desc"><textarea :placeholder="ptip3" v-model="fkxxOptionsDDesc" @focus="ptip3=''" @blur="ptip3='请简单描述去过的地方'"></textarea></div>
      </div>
    </div>
    <!--<div class="sasstip" v-show="!is1&&!is2&&!is3&&!is4?true:false">若没有以上情况，点击下一步</div>-->
    <div class="fillbtn" v-show="hideshow">
      <div class="fillzx" @click="toahead"></div>
      <div class="fillnext" @click="tonext" v-show="!islogin"></div>
      <div class="filltj" @click="tosubmit" v-show="islogin"></div>
    </div>
  </div>
</template>

<script>
  import filltop from './filltop'
  import moment from 'moment'
  import Toast from "vant/es/toast";
  import {getSubForm, getupdyqtable} from "../../../api";

  export default {
    name: "fillsass",
    components: {filltop},
    data() {
      return {
        docmHeight: document.documentElement.clientHeight ||document.body.clientHeight,
        showHeight: document.documentElement.clientHeight ||document.body.clientHeight,
        hideshow:true,  //显示或者隐藏footer
        issubmit:false,
        islogin:false,
        ptip:'行程描述',
        ptip1:'请简单描述接触经历',
        ptip2:'请简单描述接触经历',
        ptip3:'请简单描述去过的地方',
        yqlist:[{
        }],     //疫情前端造数组
        yqdesclist:[],
        yqlistsubmit:[],///提交到后台
        cqaddressshow:false,
        cqaddress:sessionStorage.getItem('proviceNm')+'-'+sessionStorage.getItem('cityNm')+'-'+sessionStorage.getItem('districtNm'),
        liveshow: false,
        select1: require('../../../assets/imgs/xfill1_sex1.png'),
        select2: require('../../../assets/imgs/xfill1_sex2.png'),
        num: 4,
        is1: sessionStorage.getItem('fkxxOptionsA'),
        is2: sessionStorage.getItem('fkxxOptionsB'),
        is3: sessionStorage.getItem('fkxxOptionsC'),
        is4: sessionStorage.getItem('fkxxOptionsD'),
        livecity: sessionStorage.getItem('tripProviceNm') + '-' + sessionStorage.getItem('tripCityNm'),
        stime: sessionStorage.getItem('tripStartTime'),
        etime: sessionStorage.getItem('tripEndTime'),
        isstart: false,
        isend: false,
        minDate: new Date(2020, 0, 1),
        maxDate: new Date(),
        currentDate: new Date(),
        tripDesc: sessionStorage.getItem('tripDesc'),  // 行程描述
        fkxxOptionsBDesc: sessionStorage.getItem('fkxxOptionsBDesc'),
        fkxxOptionsCDesc: sessionStorage.getItem('fkxxOptionsCDesc'),
        fkxxOptionsDDesc: sessionStorage.getItem('fkxxOptionsDDesc'),
        areaList: {
          province_list: {
            330000: '浙江省',
            340000: '安徽省',
            360000: '江西省',
            410000: '河南省',
            420000: '湖北省',
          },
          city_list: {
            330300: '温州市',
            331000: '台州市',
            340800: '安庆市',
            341200: '阜阳市',
            360100: '南昌市',
            360400: '九江市',
            360500: '新余市',
            361100: '上饶市',

            410100: '郑州市',
            410200: '开封市',
            410300: '洛阳市',
            410400: '平顶山市',
            410500: '安阳市',
            410600: '鹤壁市',
            410700: '新乡市',
            410800: '焦作市',
            410900: '濮阳市',
            411000: '许昌市',
            411100: '漯河市',
            411200: '三门峡市',
            411300: '南阳市',
            411400: '商丘市',
            411500: '信阳市',
            411600: '周口市',
            411700: '驻马店市',
            419000: '省直辖县',
            420100: '武汉市',
            420200: '黄石市',
            420300: '十堰市',
            420500: '宜昌市',
            420600: '襄阳市',
            420700: '鄂州市',
            420800: '荆门市',
            420900: '孝感市',
            421000: '荆州市',
            421100: '黄冈市',
            421200: '咸宁市',
            421300: '随州市',
            422800: '恩施土家族苗族自治州',
            429000: '省直辖县',

            421400: '仙桃市',
            421500: '潜江市',
            421600: '天门市',
            421700: '神农架林区'
          },
          county_list: {
            330102: "上城区",
            330103: "下城区",
            330104: "江干区",
            330105: "拱墅区",
            330106: "西湖区",
            330108: "滨江区",
            330109: "萧山区",
            330110: "余杭区",
            330111: "富阳区",
            330112: "临安区",
            330122: "桐庐县",
            330127: "淳安县",
            330182: "建德市",
            330203: "海曙区",
            330205: "江北区",
            330206: "北仑区",
            330211: "镇海区",
            330212: "鄞州区",
            330213: "奉化区",
            330225: "象山县",
            330226: "宁海县",
            330281: "余姚市",
            330282: "慈溪市",
            330302: "鹿城区",
            330303: "龙湾区",
            330304: "瓯海区",
            330305: "洞头区",
            330324: "永嘉县",
            330326: "平阳县",
            330327: "苍南县",
            330328: "文成县",
            330329: "泰顺县",
            330381: "瑞安市",
            330382: "乐清市",
            330402: "南湖区",
            330411: "秀洲区",
            330421: "嘉善县",
            330424: "海盐县",
            330481: "海宁市",
            330482: "平湖市",
            330483: "桐乡市",
            330502: "吴兴区",
            330503: "南浔区",
            330521: "德清县",
            330522: "长兴县",
            330523: "安吉县",
            330602: "越城区",
            330603: "柯桥区",
            330604: "上虞区",
            330624: "新昌县",
            330681: "诸暨市",
            330683: "嵊州市",
            330702: "婺城区",
            330703: "金东区",
            330723: "武义县",
            330726: "浦江县",
            330727: "磐安县",
            330781: "兰溪市",
            330782: "义乌市",
            330783: "东阳市",
            330784: "永康市",
            330802: "柯城区",
            330803: "衢江区",
            330822: "常山县",
            330824: "开化县",
            330825: "龙游县",
            330881: "江山市",
            330902: "定海区",
            330903: "普陀区",
            330921: "岱山县",
            330922: "嵊泗县",
            331002: "椒江区",
            331003: "黄岩区",
            331004: "路桥区",
            331022: "三门县",
            331023: "天台县",
            331024: "仙居县",
            331081: "温岭市",
            331082: "临海市",
            331083: "玉环市",
            331102: "莲都区",
            331121: "青田县",
            331122: "缙云县",
            331123: "遂昌县",
            331124: "松阳县",
            331125: "云和县",
            331126: "庆元县",
            331127: "景宁畲族自治县",
            331181: "龙泉市",
            340102: "瑶海区",
            340103: "庐阳区",
            340104: "蜀山区",
            340111: "包河区",
            340121: "长丰县",
            340122: "肥东县",
            340123: "肥西县",
            340124: "庐江县",
            340181: "巢湖市",
            340190: "高新技术开发区",
            340191: "经济技术开发区",
            340202: "镜湖区",
            340203: "弋江区",
            340207: "鸠江区",
            340208: "三山区",
            340221: "芜湖县",
            340222: "繁昌县",
            340223: "南陵县",
            340225: "无为县",
            340302: "龙子湖区",
            340303: "蚌山区",
            340304: "禹会区",
            340311: "淮上区",
            340321: "怀远县",
            340322: "五河县",
            340323: "固镇县",
            340402: "大通区",
            340403: "田家庵区",
            340404: "谢家集区",
            340405: "八公山区",
            340406: "潘集区",
            340421: "凤台县",
            340422: "寿县",
            340503: "花山区",
            340504: "雨山区",
            340506: "博望区",
            340521: "当涂县",
            340522: "含山县",
            340523: "和县",
            340602: "杜集区",
            340603: "相山区",
            340604: "烈山区",
            340621: "濉溪县",
            340705: "铜官区",
            340706: "义安区",
            340711: "郊区",
            340722: "枞阳县",
            340802: "迎江区",
            340803: "大观区",
            340811: "宜秀区",
            340822: "怀宁县",
            340824: "潜山县",
            340825: "太湖县",
            340826: "宿松县",
            340827: "望江县",
            340828: "岳西县",
            340881: "桐城市",
            341002: "屯溪区",
            341003: "黄山区",
            341004: "徽州区",
            341021: "歙县",
            341022: "休宁县",
            341023: "黟县",
            341024: "祁门县",
            341102: "琅琊区",
            341103: "南谯区",
            341122: "来安县",
            341124: "全椒县",
            341125: "定远县",
            341126: "凤阳县",
            341181: "天长市",
            341182: "明光市",
            341202: "颍州区",
            341203: "颍东区",
            341204: "颍泉区",
            341221: "临泉县",
            341222: "太和县",
            341225: "阜南县",
            341226: "颍上县",
            341282: "界首市",
            341302: "埇桥区",
            341321: "砀山县",
            341322: "萧县",
            341323: "灵璧县",
            341324: "泗县",
            341390: "经济开发区",
            341502: "金安区",
            341503: "裕安区",
            341504: "叶集区",
            341522: "霍邱县",
            341523: "舒城县",
            341524: "金寨县",
            341525: "霍山县",
            341602: "谯城区",
            341621: "涡阳县",
            341622: "蒙城县",
            341623: "利辛县",
            341702: "贵池区",
            341721: "东至县",
            341722: "石台县",
            341723: "青阳县",
            341802: "宣州区",
            341821: "郎溪县",
            341822: "广德县",
            341823: "泾县",
            341824: "绩溪县",
            341825: "旌德县",
            341881: "宁国市",
            350102: "鼓楼区",
            350103: "台江区",
            350104: "仓山区",
            350105: "马尾区",
            350111: "晋安区",
            350112: "长乐区",
            350121: "闽侯县",
            350122: "连江县",
            350123: "罗源县",
            350124: "闽清县",
            350125: "永泰县",
            350128: "平潭县",
            350181: "福清市",
            350203: "思明区",
            350205: "海沧区",
            350206: "湖里区",
            350211: "集美区",
            350212: "同安区",
            350213: "翔安区",
            350302: "城厢区",
            350303: "涵江区",
            350304: "荔城区",
            350305: "秀屿区",
            350322: "仙游县",
            350402: "梅列区",
            350403: "三元区",
            350421: "明溪县",
            350423: "清流县",
            350424: "宁化县",
            350425: "大田县",
            350426: "尤溪县",
            350427: "沙县",
            350428: "将乐县",
            350429: "泰宁县",
            350430: "建宁县",
            350481: "永安市",
            350502: "鲤城区",
            350503: "丰泽区",
            350504: "洛江区",
            350505: "泉港区",
            350521: "惠安县",
            350524: "安溪县",
            350525: "永春县",
            350526: "德化县",
            350527: "金门县",
            350581: "石狮市",
            350582: "晋江市",
            350583: "南安市",
            350602: "芗城区",
            350603: "龙文区",
            350622: "云霄县",
            350623: "漳浦县",
            350624: "诏安县",
            350625: "长泰县",
            350626: "东山县",
            350627: "南靖县",
            350628: "平和县",
            350629: "华安县",
            350681: "龙海市",
            350702: "延平区",
            350703: "建阳区",
            350721: "顺昌县",
            350722: "浦城县",
            350723: "光泽县",
            350724: "松溪县",
            350725: "政和县",
            350781: "邵武市",
            350782: "武夷山市",
            350783: "建瓯市",
            350802: "新罗区",
            350803: "永定区",
            350821: "长汀县",
            350823: "上杭县",
            350824: "武平县",
            350825: "连城县",
            350881: "漳平市",
            350902: "蕉城区",
            350921: "霞浦县",
            350922: "古田县",
            350923: "屏南县",
            350924: "寿宁县",
            350925: "周宁县",
            350926: "柘荣县",
            350981: "福安市",
            350982: "福鼎市",
            360102: "东湖区",
            360103: "西湖区",
            360104: "青云谱区",
            360105: "湾里区",
            360111: "青山湖区",
            360112: "新建区",
            360121: "南昌县",
            360123: "安义县",
            360124: "进贤县",
            360190: "经济技术开发区",
            360192: "高新区",
            360202: "昌江区",
            360203: "珠山区",
            360222: "浮梁县",
            360281: "乐平市",
            360302: "安源区",
            360313: "湘东区",
            360321: "莲花县",
            360322: "上栗县",
            360323: "芦溪县",
            360402: "濂溪区",
            360403: "浔阳区",
            360404: "柴桑区",
            360423: "武宁县",
            360424: "修水县",
            360425: "永修县",
            360426: "德安县",
            360428: "都昌县",
            360429: "湖口县",
            360430: "彭泽县",
            360481: "瑞昌市",
            360482: "共青城市",
            360483: "庐山市",
            360490: "经济技术开发区",
            360502: "渝水区",
            360521: "分宜县",
            360602: "月湖区",
            360603: "余江区",
            360681: "贵溪市",
            360702: "章贡区",
            360703: "南康区",
            360704: "赣县区",
            360722: "信丰县",
            360723: "大余县",
            360724: "上犹县",
            360725: "崇义县",
            360726: "安远县",
            360727: "龙南县",
            360728: "定南县",
            360729: "全南县",
            360730: "宁都县",
            360731: "于都县",
            360732: "兴国县",
            360733: "会昌县",
            360734: "寻乌县",
            360735: "石城县",
            360781: "瑞金市",
            360802: "吉州区",
            360803: "青原区",
            360821: "吉安县",
            360822: "吉水县",
            360823: "峡江县",
            360824: "新干县",
            360825: "永丰县",
            360826: "泰和县",
            360827: "遂川县",
            360828: "万安县",
            360829: "安福县",
            360830: "永新县",
            360881: "井冈山市",
            360902: "袁州区",
            360921: "奉新县",
            360922: "万载县",
            360923: "上高县",
            360924: "宜丰县",
            360925: "靖安县",
            360926: "铜鼓县",
            360981: "丰城市",
            360982: "樟树市",
            360983: "高安市",
            361002: "临川区",
            361003: "东乡区",
            361021: "南城县",
            361022: "黎川县",
            361023: "南丰县",
            361024: "崇仁县",
            361025: "乐安县",
            361026: "宜黄县",
            361027: "金溪县",
            361028: "资溪县",
            361030: "广昌县",
            361102: "信州区",
            361103: "广丰区",
            361121: "上饶县",
            361123: "玉山县",
            361124: "铅山县",
            361125: "横峰县",
            361126: "弋阳县",
            361127: "余干县",
            361128: "鄱阳县",
            361129: "万年县",
            361130: "婺源县",
            361181: "德兴市",
            370102: "历下区",
            370103: "市中区",
            370104: "槐荫区",
            370105: "天桥区",
            370112: "历城区",
            370113: "长清区",
            370114: "章丘区",
            370115: "济阳区",
            370124: "平阴县",
            370126: "商河县",
            370190: "高新区",
            370191: "莱芜区",
            370202: "市南区",
            370203: "市北区",
            370211: "黄岛区",
            370212: "崂山区",
            370213: "李沧区",
            370214: "城阳区",
            370215: "即墨区",
            370281: "胶州市",
            370283: "平度市",
            370285: "莱西市",
            370290: "开发区",
            370302: "淄川区",
            370303: "张店区",
            370304: "博山区",
            370305: "临淄区",
            370306: "周村区",
            370321: "桓台县",
            370322: "高青县",
            370323: "沂源县",
            370402: "市中区",
            370403: "薛城区",
            370404: "峄城区",
            370405: "台儿庄区",
            370406: "山亭区",
            370481: "滕州市",
            370502: "东营区",
            370503: "河口区",
            370505: "垦利区",
            370522: "利津县",
            370523: "广饶县",
            370602: "芝罘区",
            370611: "福山区",
            370612: "牟平区",
            370613: "莱山区",
            370634: "长岛县",
            370681: "龙口市",
            370682: "莱阳市",
            370683: "莱州市",
            370684: "蓬莱市",
            370685: "招远市",
            370686: "栖霞市",
            370687: "海阳市",
            370690: "开发区",
            370702: "潍城区",
            370703: "寒亭区",
            370704: "坊子区",
            370705: "奎文区",
            370724: "临朐县",
            370725: "昌乐县",
            370781: "青州市",
            370782: "诸城市",
            370783: "寿光市",
            370784: "安丘市",
            370785: "高密市",
            370786: "昌邑市",
            370790: "开发区",
            370791: "高新区",
            370811: "任城区",
            370812: "兖州区",
            370826: "微山县",
            370827: "鱼台县",
            370828: "金乡县",
            370829: "嘉祥县",
            370830: "汶上县",
            370831: "泗水县",
            370832: "梁山县",
            370881: "曲阜市",
            370883: "邹城市",
            370890: "高新区",
            370902: "泰山区",
            370911: "岱岳区",
            370921: "宁阳县",
            370923: "东平县",
            370982: "新泰市",
            370983: "肥城市",
            371002: "环翠区",
            371003: "文登区",
            371082: "荣成市",
            371083: "乳山市",
            371091: "经济技术开发区",
            371102: "东港区",
            371103: "岚山区",
            371121: "五莲县",
            371122: "莒县",
            371302: "兰山区",
            371311: "罗庄区",
            371312: "河东区",
            371321: "沂南县",
            371322: "郯城县",
            371323: "沂水县",
            371324: "兰陵县",
            371325: "费县",
            371326: "平邑县",
            371327: "莒南县",
            371328: "蒙阴县",
            371329: "临沭县",
            371402: "德城区",
            371403: "陵城区",
            371422: "宁津县",
            371423: "庆云县",
            371424: "临邑县",
            371425: "齐河县",
            371426: "平原县",
            371427: "夏津县",
            371428: "武城县",
            371481: "乐陵市",
            371482: "禹城市",
            371502: "东昌府区",
            371521: "阳谷县",
            371522: "莘县",
            371523: "茌平县",
            371524: "东阿县",
            371525: "冠县",
            371526: "高唐县",
            371581: "临清市",
            371602: "滨城区",
            371603: "沾化区",
            371621: "惠民县",
            371622: "阳信县",
            371623: "无棣县",
            371625: "博兴县",
            371681: "邹平市",
            371702: "牡丹区",
            371703: "定陶区",
            371721: "曹县",
            371722: "单县",
            371723: "成武县",
            371724: "巨野县",
            371725: "郓城县",
            371726: "鄄城县",
            371728: "东明县",
            410102: "中原区",
            410103: "二七区",
            410104: "管城回族区",
            410105: "金水区",
            410106: "上街区",
            410108: "惠济区",
            410122: "中牟县",
            410181: "巩义市",
            410182: "荥阳市",
            410183: "新密市",
            410184: "新郑市",
            410185: "登封市",
            410190: "高新技术开发区",
            410191: "经济技术开发区",
            410202: "龙亭区",
            410203: "顺河回族区",
            410204: "鼓楼区",
            410205: "禹王台区",
            410212: "祥符区",
            410221: "杞县",
            410222: "通许县",
            410223: "尉氏县",
            410225: "兰考县",
            410302: "老城区",
            410303: "西工区",
            410304: "瀍河回族区",
            410305: "涧西区",
            410306: "吉利区",
            410311: "洛龙区",
            410322: "孟津县",
            410323: "新安县",
            410324: "栾川县",
            410325: "嵩县",
            410326: "汝阳县",
            410327: "宜阳县",
            410328: "洛宁县",
            410329: "伊川县",
            410381: "偃师市",
            410402: "新华区",
            410403: "卫东区",
            410404: "石龙区",
            410411: "湛河区",
            410421: "宝丰县",
            410422: "叶县",
            410423: "鲁山县",
            410425: "郏县",
            410481: "舞钢市",
            410482: "汝州市",
            410502: "文峰区",
            410503: "北关区",
            410505: "殷都区",
            410506: "龙安区",
            410522: "安阳县",
            410523: "汤阴县",
            410526: "滑县",
            410527: "内黄县",
            410581: "林州市",
            410590: "开发区",
            410602: "鹤山区",
            410603: "山城区",
            410611: "淇滨区",
            410621: "浚县",
            410622: "淇县",
            410702: "红旗区",
            410703: "卫滨区",
            410704: "凤泉区",
            410711: "牧野区",
            410721: "新乡县",
            410724: "获嘉县",
            410725: "原阳县",
            410726: "延津县",
            410727: "封丘县",
            410728: "长垣县",
            410781: "卫辉市",
            410782: "辉县市",
            410802: "解放区",
            410803: "中站区",
            410804: "马村区",
            410811: "山阳区",
            410821: "修武县",
            410822: "博爱县",
            410823: "武陟县",
            410825: "温县",
            410882: "沁阳市",
            410883: "孟州市",
            410902: "华龙区",
            410922: "清丰县",
            410923: "南乐县",
            410926: "范县",
            410927: "台前县",
            410928: "濮阳县",
            411002: "魏都区",
            411003: "建安区",
            411024: "鄢陵县",
            411025: "襄城县",
            411081: "禹州市",
            411082: "长葛市",
            411102: "源汇区",
            411103: "郾城区",
            411104: "召陵区",
            411121: "舞阳县",
            411122: "临颍县",
            411202: "湖滨区",
            411203: "陕州区",
            411221: "渑池县",
            411224: "卢氏县",
            411281: "义马市",
            411282: "灵宝市",
            411302: "宛城区",
            411303: "卧龙区",
            411321: "南召县",
            411322: "方城县",
            411323: "西峡县",
            411324: "镇平县",
            411325: "内乡县",
            411326: "淅川县",
            411327: "社旗县",
            411328: "唐河县",
            411329: "新野县",
            411330: "桐柏县",
            411381: "邓州市",
            411402: "梁园区",
            411403: "睢阳区",
            411421: "民权县",
            411422: "睢县",
            411423: "宁陵县",
            411424: "柘城县",
            411425: "虞城县",
            411426: "夏邑县",
            411481: "永城市",
            411502: "浉河区",
            411503: "平桥区",
            411521: "罗山县",
            411522: "光山县",
            411523: "新县",
            411524: "商城县",
            411525: "固始县",
            411526: "潢川县",
            411527: "淮滨县",
            411528: "息县",
            411602: "川汇区",
            411621: "扶沟县",
            411622: "西华县",
            411623: "商水县",
            411624: "沈丘县",
            411625: "郸城县",
            411626: "淮阳县",
            411627: "太康县",
            411628: "鹿邑县",
            411681: "项城市",
            411690: "经济开发区",
            411702: "驿城区",
            411721: "西平县",
            411722: "上蔡县",
            411723: "平舆县",
            411724: "正阳县",
            411725: "确山县",
            411726: "泌阳县",
            411727: "汝南县",
            411728: "遂平县",
            411729: "新蔡县",
            419001: "济源市",
            420102: "江岸区",
            420103: "江汉区",
            420104: "硚口区",
            420105: "汉阳区",
            420106: "武昌区",
            420107: "青山区",
            420111: "洪山区",
            420112: "东西湖区",
            420113: "汉南区",
            420114: "蔡甸区",
            420115: "江夏区",
            420116: "黄陂区",
            420117: "新洲区",
            420202: "黄石港区",
            420203: "西塞山区",
            420204: "下陆区",
            420205: "铁山区",
            420222: "阳新县",
            420281: "大冶市",
            420302: "茅箭区",
            420303: "张湾区",
            420304: "郧阳区",
            420322: "郧西县",
            420323: "竹山县",
            420324: "竹溪县",
            420325: "房县",
            420381: "丹江口市",
            420502: "西陵区",
            420503: "伍家岗区",
            420504: "点军区",
            420505: "猇亭区",
            420506: "夷陵区",
            420525: "远安县",
            420526: "兴山县",
            420527: "秭归县",
            420528: "长阳土家族自治县",
            420529: "五峰土家族自治县",
            420581: "宜都市",
            420582: "当阳市",
            420583: "枝江市",
            420590: "经济开发区",
            420602: "襄城区",
            420606: "樊城区",
            420607: "襄州区",
            420624: "南漳县",
            420625: "谷城县",
            420626: "保康县",
            420682: "老河口市",
            420683: "枣阳市",
            420684: "宜城市",
            420702: "梁子湖区",
            420703: "华容区",
            420704: "鄂城区",
            420802: "东宝区",
            420804: "掇刀区",
            420822: "沙洋县",
            420881: "钟祥市",
            420882: "京山市",
            420902: "孝南区",
            420921: "孝昌县",
            420922: "大悟县",
            420923: "云梦县",
            420981: "应城市",
            420982: "安陆市",
            420984: "汉川市",
            421002: "沙市区",
            421003: "荆州区",
            421022: "公安县",
            421023: "监利县",
            421024: "江陵县",
            421081: "石首市",
            421083: "洪湖市",
            421087: "松滋市",
            421102: "黄州区",
            421121: "团风县",
            421122: "红安县",
            421123: "罗田县",
            421124: "英山县",
            421125: "浠水县",
            421126: "蕲春县",
            421127: "黄梅县",
            421181: "麻城市",
            421182: "武穴市",
            421202: "咸安区",
            421221: "嘉鱼县",
            421222: "通城县",
            421223: "崇阳县",
            421224: "通山县",
            421281: "赤壁市",
            421303: "曾都区",
            421321: "随县",
            421381: "广水市",
            422801: "恩施市",
            422802: "利川市",
            422822: "建始县",
            422823: "巴东县",
            422825: "宣恩县",
            422826: "咸丰县",
            422827: "来凤县",
            422828: "鹤峰县",
            429004: "仙桃市",
            429005: "潜江市",
            429006: "天门市",
            429021: "神农架林区",
            430102: "芙蓉区",
            430103: "天心区",
            430104: "岳麓区",
            430105: "开福区",
            430111: "雨花区",
            430112: "望城区",
            430121: "长沙县",
            430181: "浏阳市",
            430182: "宁乡市",
            430202: "荷塘区",
            430203: "芦淞区",
            430204: "石峰区",
            430211: "天元区",
            430212: "渌口区",
            430223: "攸县",
            430224: "茶陵县",
            430225: "炎陵县",
            430281: "醴陵市",
            430302: "雨湖区",
            430304: "岳塘区",
            430321: "湘潭县",
            430381: "湘乡市",
            430382: "韶山市",
            430405: "珠晖区",
            430406: "雁峰区",
            430407: "石鼓区",
            430408: "蒸湘区",
            430412: "南岳区",
            430421: "衡阳县",
            430422: "衡南县",
            430423: "衡山县",
            430424: "衡东县",
            430426: "祁东县",
            430481: "耒阳市",
            430482: "常宁市",
            430502: "双清区",
            430503: "大祥区",
            430511: "北塔区",
            430521: "邵东县",
            430522: "新邵县",
            430523: "邵阳县",
            430524: "隆回县",
            430525: "洞口县",
            430527: "绥宁县",
            430528: "新宁县",
            430529: "城步苗族自治县",
            430581: "武冈市",
            430602: "岳阳楼区",
            430603: "云溪区",
            430611: "君山区",
            430621: "岳阳县",
            430623: "华容县",
            430624: "湘阴县",
            430626: "平江县",
            430681: "汨罗市",
            430682: "临湘市",
            430702: "武陵区",
            430703: "鼎城区",
            430721: "安乡县",
            430722: "汉寿县",
            430723: "澧县",
            430724: "临澧县",
            430725: "桃源县",
            430726: "石门县",
            430781: "津市市",
            430802: "永定区",
            430811: "武陵源区",
            430821: "慈利县",
            430822: "桑植县",
            430902: "资阳区",
            430903: "赫山区",
            430921: "南县",
            430922: "桃江县",
            430923: "安化县",
            430981: "沅江市",
            431002: "北湖区",
            431003: "苏仙区",
            431021: "桂阳县",
            431022: "宜章县",
            431023: "永兴县",
            431024: "嘉禾县",
            431025: "临武县",
            431026: "汝城县",
            431027: "桂东县",
            431028: "安仁县",
            431081: "资兴市",
            431102: "零陵区",
            431103: "冷水滩区",
            431121: "祁阳县",
            431122: "东安县",
            431123: "双牌县",
            431124: "道县",
            431125: "江永县",
            431126: "宁远县",
            431127: "蓝山县",
            431128: "新田县",
            431129: "江华瑶族自治县",
            431202: "鹤城区",
            431221: "中方县",
            431222: "沅陵县",
            431223: "辰溪县",
            431224: "溆浦县",
            431225: "会同县",
            431226: "麻阳苗族自治县",
            431227: "新晃侗族自治县",
            431228: "芷江侗族自治县",
            431229: "靖州苗族侗族自治县",
            431230: "通道侗族自治县",
            431281: "洪江市",
            431302: "娄星区",
            431321: "双峰县",
            431322: "新化县",
            431381: "冷水江市",
            431382: "涟源市",
            433101: "吉首市",
            433122: "泸溪县",
            433123: "凤凰县",
            433124: "花垣县",
            433125: "保靖县",
            433126: "古丈县",
            433127: "永顺县",
            433130: "龙山县",
            440103: "荔湾区",
            440104: "越秀区",
            440105: "海珠区",
            440106: "天河区",
            440111: "白云区",
            440112: "黄埔区",
            440113: "番禺区",
            440114: "花都区",
            440115: "南沙区",
            440117: "从化区",
            440118: "增城区",
            440203: "武江区",
            440204: "浈江区",
            440205: "曲江区",
            440222: "始兴县",
            440224: "仁化县",
            440229: "翁源县",
            440232: "乳源瑶族自治县",
            440233: "新丰县",
            440281: "乐昌市",
            440282: "南雄市",
            440303: "罗湖区",
            440304: "福田区",
            440305: "南山区",
            440306: "宝安区",
            440307: "龙岗区",
            440308: "盐田区",
            440309: "龙华区",
            440310: "坪山区",
            440311: "光明区",
            440402: "香洲区",
            440403: "斗门区",
            440404: "金湾区",
            440507: "龙湖区",
            440511: "金平区",
            440512: "濠江区",
            440513: "潮阳区",
            440514: "潮南区",
            440515: "澄海区",
            440523: "南澳县",
            440604: "禅城区",
            440605: "南海区",
            440606: "顺德区",
            440607: "三水区",
            440608: "高明区",
            440703: "蓬江区",
            440704: "江海区",
            440705: "新会区",
            440781: "台山市",
            440783: "开平市",
            440784: "鹤山市",
            440785: "恩平市",
            440802: "赤坎区",
            440803: "霞山区",
            440804: "坡头区",
            440811: "麻章区",
            440823: "遂溪县",
            440825: "徐闻县",
            440881: "廉江市",
            440882: "雷州市",
            440883: "吴川市",
            440890: "经济技术开发区",
            440902: "茂南区",
            440904: "电白区",
            440981: "高州市",
            440982: "化州市",
            440983: "信宜市",
            441202: "端州区",
            441203: "鼎湖区",
            441204: "高要区",
            441223: "广宁县",
            441224: "怀集县",
            441225: "封开县",
            441226: "德庆县",
            441284: "四会市",
            441302: "惠城区",
            441303: "惠阳区",
            441322: "博罗县",
            441323: "惠东县",
            441324: "龙门县",
            441402: "梅江区",
            441403: "梅县区",
            441422: "大埔县",
            441423: "丰顺县",
            441424: "五华县",
            441426: "平远县",
            441427: "蕉岭县",
            441481: "兴宁市",
            441502: "城区",
            441521: "海丰县",
            441523: "陆河县",
            441581: "陆丰市",
            441602: "源城区",
            441621: "紫金县",
            441622: "龙川县",
            441623: "连平县",
            441624: "和平县",
            441625: "东源县",
            441702: "江城区",
            441704: "阳东区",
            441721: "阳西县",
            441781: "阳春市",
            441802: "清城区",
            441803: "清新区",
            441821: "佛冈县",
            441823: "阳山县",
            441825: "连山壮族瑶族自治县",
            441826: "连南瑶族自治县",
            441881: "英德市",
            441882: "连州市",
            441901: "中堂镇",
            441903: "南城街道办事处",
            441904: "长安镇",
            441905: "东坑镇",
            441906: "樟木头镇",
            441907: "莞城街道办事处",
            441908: "石龙镇",
            441909: "桥头镇",
            441910: "万江街道办事处",
            441911: "麻涌镇",
            441912: "虎门镇",
            441913: "谢岗镇",
            441914: "石碣镇",
            441915: "茶山镇",
            441916: "东城街道办事处",
            441917: "洪梅镇",
            441918: "道滘镇",
            441919: "高埗镇",
            441920: "企石镇",
            441921: "凤岗镇",
            441922: "大岭山镇",
            441923: "松山湖管委会",
            441924: "清溪镇",
            441925: "望牛墩镇",
            441926: "厚街镇",
            441927: "常平镇",
            441928: "寮步镇",
            441929: "石排镇",
            441930: "横沥镇",
            441931: "塘厦镇",
            441932: "黄江镇",
            441933: "大朗镇",
            441934: "东莞港",
            441935: "东莞生态园",
            441990: "沙田镇",
            442001: "南头镇",
            442002: "神湾镇",
            442003: "东凤镇",
            442004: "五桂山街道办事处",
            442005: "黄圃镇",
            442006: "小榄镇",
            442007: "石岐区街道办事处",
            442008: "横栏镇",
            442009: "三角镇",
            442010: "三乡镇",
            442011: "港口镇",
            442012: "沙溪镇",
            442013: "板芙镇",
            442015: "东升镇",
            442016: "阜沙镇",
            442017: "民众镇",
            442018: "东区街道办事处",
            442019: "火炬开发区街道办事处",
            442020: "西区街道办事处",
            442021: "南区街道办事处",
            442022: "古镇镇",
            442023: "坦洲镇",
            442024: "大涌镇",
            442025: "南朗镇",
            445102: "湘桥区",
            445103: "潮安区",
            445122: "饶平县",
            445202: "榕城区",
            445203: "揭东区",
            445222: "揭西县",
            445224: "惠来县",
            445281: "普宁市",
            445302: "云城区",
            445303: "云安区",
            445321: "新兴县",
            445322: "郁南县",
            445381: "罗定市",
          }
        },
        areaList1:require('@/utils/area.js').default,
        areayq:[],
        isuserId:localStorage.getItem('userId'),
      }
    },
    methods: {
      tofocus(){
        this.ptip='';
      },
      toblur(){
        this.ptip='行程描述';
      },
      tofocus1(){
        this.ptip1='';
      },
      toblur1(){
        this.ptip1='请简单描述接触经历';
      },
      tofocus2(){
        this.ptip2='';
      },
      toblur2(){
        this.ptip2='请简单描述接触经历';
      },
      tofocus3(){
        this.ptip3='';
      },
      toblur3(){
        this.ptip3='请简单描述去过的地方';
      },
      toyqdelete(index){
       this.yqdesclist.splice(index,1);
        this.yqlistsubmit.splice(index,1);
      },
      yqaddclick(index){
        if(this.livecity==='null-null'){
          Toast('请选择居留城市');
        }
        else if(this.stime===''){
          Toast('请选择居留开始时间');
        }else if(this.etime===''){
          Toast('请选择居留结束时间');
        }
        else if(this.tripDesc===''){
          Toast('请填写行程描述')
        }else {
          this.yqdesclist.push({
            time:this.stime+'~'+this.etime,
            area:this.livecity,
            desc:this.tripDesc,
          });

          this.yqlistsubmit.push({
            tripProviceNm:this.areayq[0].name,
            tripCityNm:this.areayq[1].name,
            tripAreaNm:this.areayq[2].name,
            tripStartTime:this.stime,
            tripEndTime:this.etime,
            tripDesc:this.tripDesc,
          });
          this.livecity=null+'-'+null;
          this.stime='';
          this.etime='';
          this.tripDesc='';
          console.log('556656',this.yqlistsubmit);
        }
      },
      selectcqaddress(){
       this.cqaddressshow=true;
      },
      confirmcqaddress(a){
        this.cqaddress=a[0].name+'-'+a[1].name+'-'+a[2].name;
        sessionStorage.setItem('proviceNm',a[0].name);
        sessionStorage.setItem('cityNm',a[1].name);
        sessionStorage.setItem('districtNm',a[2].name);
        this.cqaddressshow=false;
      },
      linkDownload(url) {
        window.location.href = url;
      },
      selectcity() {
        this.liveshow = true;
      },
      showstart() {
        this.isstart = true;
      },
      showend() {
        this.isend = true;
      },
      confirmlive(a) {
        this.areayq=a;
        console.log('445555',this.areayq);
        this.liveshow = false;
        this.livecity = a[0].name + '-' + a[1].name;
       /* sessionStorage.setItem('tripProviceNm', a[0].name);
        sessionStorage.setItem('tripCityNm', a[1].name);*/
        console.log(a);
      },
      confirmstart(value) {
        this.isstart = false;
        this.stime = moment(value).format('MM-DD');
        sessionStorage.setItem('tripStartTime', this.stime);
      },
      confirmend(value) {
        this.isend = false;
        this.etime = moment(value).format('MM-DD');
        sessionStorage.setItem('tripEndTime', this.etime);
      },
      canceldate() {
        this.cqaddressshow=false;
        this.isstart = false;
        this.isend = false;
        this.liveshow = false;
      },
      setsess(sess, name, descname) {
        if (sess === 'true') {
          sessionStorage.setItem(name, true);
        } else {
          sessionStorage.setItem(descname, '');
          sessionStorage.setItem(name, false);
        }
      },
      tochange(state) {
        if (state === 'true') {
          state = 'false';
        } else {
          state = 'true';
        }
        return state;
      },
      totouch(num, sessname, descname) {
        if (num === 1) {
          this.is1 = this.tochange(this.is1);
          if (this.is1 === 'false') {
            this.livecity = '';
            sessionStorage.setItem('tripProviceNm', '');
            sessionStorage.setItem('tripCityNm', '');
            sessionStorage.setItem('tripStartTime', '');
            sessionStorage.setItem('tripEndTime', '');
          }
          this.setsess(this.is1, sessname, descname);
        } else if (num === 2) {
          this.is2 = this.tochange(this.is2);
          if (this.is2 === 'false') {
            this.fkxxOptionsBDesc = '';
          }
          this.setsess(this.is2, sessname, descname);
        } else if (num === 3) {
          this.is3 = this.tochange(this.is3);
          if (this.is3 === 'false') {
            this.fkxxOptionsCDesc = '';
          }
          this.setsess(this.is3, sessname, descname);
        } else {
          this.is4 = this.tochange(this.is4);
          if (this.is4 === 'false') {
            this.fkxxOptionsDDesc = '';
          }
          this.setsess(this.is4, sessname, descname);
        }
      },
      toahead() {
        this.$router_({path: '/medicalinfo'});
      },
      tonext() {
        if (this.is1 === 'true' && !this.livecity) {
          Toast('请选择居留城市');
        } else if (this.is1 === 'true' && !this.stime) {
          Toast('请选择居留开始时间');
        } else if (this.is1 === 'true' && !this.etime) {
          Toast('请选择居留结束时间');
        } else if (this.is1 === 'true' && !this.tripDesc) {
          Toast('请填写行程描述');
        } else if (this.is2 === 'true' && !this.fkxxOptionsBDesc) {
          Toast('请填写行程描述');
        } else if (this.is3 === 'true' && !this.fkxxOptionsCDesc) {
          Toast('请填写行程描述');
        } else if (this.is4 === 'true' && !this.fkxxOptionsDDesc) {
          Toast('请填写行程描述');
        }else if(this.cqaddress==='null-null-null'){
          Toast('请填写长期居所');
        }
        else {
          sessionStorage.setItem('yqlistsubmit',JSON.stringify(this.yqlistsubmit));
          sessionStorage.setItem('tripDesc', this.tripDesc);
          sessionStorage.setItem('fkxxOptionsBDesc', this.fkxxOptionsBDesc);
          sessionStorage.setItem('fkxxOptionsCDesc', this.fkxxOptionsCDesc);
          sessionStorage.setItem('fkxxOptionsDDesc', this.fkxxOptionsDDesc);
          this.$router_({path: '/fillphone'});
        }
      },
      tosubmit(){
        if(this.issubmit){
          Toast('请勿多次点击');
        }else {
          let isupd = sessionStorage.getItem('istableupd');
          if (this.isuserId && !Boolean(isupd)) {//已经登录了
            this.actionsubmit();
          } else if (Boolean(isupd)) {
            this.updsubmit();
          }
        }
      },
      actionsubmit(){
          let hjjkYqConsultRo = {
            hjjkYqTripVos: JSON.parse(sessionStorage.getItem('yqlistsubmit')),
            jqDistrictNm: sessionStorage.getItem('jqDistrictNm'),
            districtNm: sessionStorage.getItem('districtNm'),
            age: sessionStorage.getItem('age'),
            cityNm: sessionStorage.getItem('cityNm'),
            fkxxOptionsA: sessionStorage.getItem('fkxxOptionsA'),
            fkxxOptionsB: sessionStorage.getItem('fkxxOptionsB'),
            fkxxOptionsBDesc: sessionStorage.getItem('fkxxOptionsBDesc'),
            fkxxOptionsC: sessionStorage.getItem('fkxxOptionsC'),
            fkxxOptionsCDesc: sessionStorage.getItem('fkxxOptionsCDesc'),
            fkxxOptionsD: sessionStorage.getItem('fkxxOptionsD'),
            fkxxOptionsDDesc: sessionStorage.getItem('fkxxOptionsDDesc'),
            pastHistory: sessionStorage.getItem('pastHistory'),
            phone: localStorage.getItem('tablephone'),
            proviceNm: sessionStorage.getItem('proviceNm'),
            reportImg: sessionStorage.getItem('reportImg'),
            sex: sessionStorage.getItem('sex'),
            symOptionsEx: sessionStorage.getItem('symOptionsEx'),
            symOptionsExTime: sessionStorage.getItem('symOptionsExTime'),
            symOptionsFr: sessionStorage.getItem('symOptionsFr'),
            symOptionsFrTime: sessionStorage.getItem('symOptionsFrTime'),
            symOptionsFx: sessionStorage.getItem('symOptionsFx'),
            symOptionsFxTime: sessionStorage.getItem('symOptionsFxTime'),
            symOptionsKs: sessionStorage.getItem('symOptionsKs'),
            symOptionsKsTime: sessionStorage.getItem('symOptionsKsTime'),
            symOptionsOt: sessionStorage.getItem('symOptionsOt'),
            symOptionsOtTime: sessionStorage.getItem('symOptionsOtTime'),
            symOptionsXmqj: sessionStorage.getItem('symOptionsXmqj'),
            symOptionsXmqjTime: sessionStorage.getItem('symOptionsXmqjTime'),
            temp: sessionStorage.getItem('temp'),
            userId: Number(localStorage.getItem('userId')),
            visitingProcess: sessionStorage.getItem('visitingProcess'),
            illnessDesc: sessionStorage.getItem('illnessDesc'),
            jqProviceNm: sessionStorage.getItem('jqProviceNm'),
            jqCityNm: sessionStorage.getItem('jqCityNm'),

          };
        getSubForm(hjjkYqConsultRo).then((res) => {
          this.issubmit=true;
          this.userId = res.data.data;
          console.log('ppp', res);
          if (res.data.code === 0) {
            let inApp = Boolean(sessionStorage.getItem('inApp'));
            if (inApp) {
              this.$dialog.alert({
                title: '提交成功',
                message: '医生将会尽快回复您的咨询 请注意消息查收！',
                confirmButtonText: '确 定',
                confirmButtonColor: '#3FA998',
              }).then(() => {
                this.emptytable();
                this.$router_({path: '/'});
              }).catch(() => {

              });
            } else {
              this.$dialog.confirm({
                title: '提交成功',
                message: '医生将会尽快回复您的咨询 请注意消息查收！' + '<br>' + '也可下载APP，与医生一对一即时交流',
                confirmButtonText: '确 定',
                cancelButtonText: '打开APP',
                confirmButtonColor: '#56B2AD',
                cancelButtonColor: '#56B2AD'
              }).then(() => {
                this.emptytable();
                this.$router_({path: '/'});
              }).catch(() => {
                this.emptytable();
              });
            }
          } else {
            let msg = res.data.msg;
            Toast(msg);
          }
        });

      },
      updsubmit(){
        let hjjkYqConsultRo = {
          id:Number(sessionStorage.getItem('consultId')),
          hjjkYqTripVos:JSON.parse(sessionStorage.getItem('yqlistsubmit')),
          jqDistrictNm:sessionStorage.getItem('jqDistrictNm'),
          districtNm:sessionStorage.getItem('districtNm'),
          age: sessionStorage.getItem('age'),
          cityNm: sessionStorage.getItem('cityNm'),
          fkxxOptionsA: sessionStorage.getItem('fkxxOptionsA'),
          fkxxOptionsB: sessionStorage.getItem('fkxxOptionsB'),
          fkxxOptionsBDesc: sessionStorage.getItem('fkxxOptionsBDesc'),
          fkxxOptionsC: sessionStorage.getItem('fkxxOptionsC'),
          fkxxOptionsCDesc: sessionStorage.getItem('fkxxOptionsCDesc'),
          fkxxOptionsD: sessionStorage.getItem('fkxxOptionsD'),
          fkxxOptionsDDesc: sessionStorage.getItem('fkxxOptionsDDesc'),
          pastHistory: sessionStorage.getItem('pastHistory'),
          phone: localStorage.getItem('tablephone'),
          proviceNm: sessionStorage.getItem('proviceNm'),
          reportImg: sessionStorage.getItem('reportImg'),
          sex: sessionStorage.getItem('sex'),
          symOptionsEx: sessionStorage.getItem('symOptionsEx'),
          symOptionsExTime: sessionStorage.getItem('symOptionsExTime'),
          symOptionsFr: sessionStorage.getItem('symOptionsFr'),
          symOptionsFrTime: sessionStorage.getItem('symOptionsFrTime'),
          symOptionsFx: sessionStorage.getItem('symOptionsFx'),
          symOptionsFxTime: sessionStorage.getItem('symOptionsFxTime'),
          symOptionsKs: sessionStorage.getItem('symOptionsKs'),
          symOptionsKsTime: sessionStorage.getItem('symOptionsKsTime'),
          symOptionsOt: sessionStorage.getItem('symOptionsOt'),
          symOptionsOtTime: sessionStorage.getItem('symOptionsOtTime'),
          symOptionsXmqj: sessionStorage.getItem('symOptionsXmqj'),
          symOptionsXmqjTime: sessionStorage.getItem('symOptionsXmqjTime'),
          temp: sessionStorage.getItem('temp'),
          userId: Number(localStorage.getItem('userId')),
          visitingProcess: sessionStorage.getItem('visitingProcess'),
          illnessDesc: sessionStorage.getItem('illnessDesc'),
          jqProviceNm:sessionStorage.getItem('jqProviceNm'),
          jqCityNm:sessionStorage.getItem('jqCityNm'),

        };
        getupdyqtable(hjjkYqConsultRo).then((res)=>{
          this.issubmit=true;
          if(res.data.code===0) {
            this.$dialog.alert({
              title: '修改成功',
              message: '医生将会尽快回复您的咨询 请注意消息查收！',
              confirmButtonText: '确 定',
              confirmButtonColor: '#3FA998',
            }).then(() => {
              this.emptytable();
              this.$router_({path: '/'});
            }).catch(()=>{

            });
          }else {
            let msg=res.data.msg;
            Toast(msg);
          }
        })
      },
      emptytable() {
        sessionStorage.removeItem('istableupd');
        sessionStorage.removeItem('yqlistsubmit');
        sessionStorage.removeItem('jqDistrictNm');
        sessionStorage.removeItem('districtNm');
        sessionStorage.removeItem('age');
        sessionStorage.removeItem('cityNm');
        sessionStorage.removeItem('code');
        sessionStorage.removeItem('fkxxOptionsA');
        sessionStorage.removeItem('fkxxOptionsB');
        sessionStorage.removeItem('fkxxOptionsBDesc');
        sessionStorage.removeItem('fkxxOptionsC');
        sessionStorage.removeItem('fkxxOptionsCDesc');
        sessionStorage.removeItem('fkxxOptionsD');
        sessionStorage.removeItem('fkxxOptionsDDesc');

        sessionStorage.removeItem('illnessDesc');
        sessionStorage.removeItem('jqCityNm');
        sessionStorage.removeItem('jqProviceNm');
        sessionStorage.removeItem('name');
        sessionStorage.removeItem('pastHistory');

        sessionStorage.removeItem('phone');
        sessionStorage.removeItem('proviceNm');
        sessionStorage.removeItem('reportImg');
        sessionStorage.removeItem('sex');
        sessionStorage.removeItem('statNm');

        sessionStorage.removeItem('symOptionsExot');
        sessionStorage.removeItem('symOptionsExotTime');
        sessionStorage.removeItem('symOptionsFlst');
        sessionStorage.removeItem('symOptionsFlstTime');
        sessionStorage.removeItem('symOptionsFr');

        sessionStorage.removeItem('symOptionsFrTime');
        sessionStorage.removeItem('symOptionsFx');
        sessionStorage.removeItem('symOptionsFxTime');
        sessionStorage.removeItem('symOptionsKs');
        sessionStorage.removeItem('symOptionsKsTime');

        sessionStorage.removeItem('symOptionsXmqj');
        sessionStorage.removeItem('symOptionsXmqjTime');
        sessionStorage.removeItem('temp');
        sessionStorage.removeItem('tripCityNm');
        sessionStorage.removeItem('tripDesc');

        sessionStorage.removeItem('tripEndTime');
        sessionStorage.removeItem('tripProviceNm');
        sessionStorage.removeItem('tripStartTime');
        sessionStorage.removeItem('visitingProcess');

      },
    },
    watch: {
      //监听显示高度
      showHeight:function() {
        if(this.docmHeight > this.showHeight){
          //隐藏
          this.hideshow=false
        }else{
          //显示
          this.hideshow=true
        }
      }
    },
    mounted() {
      if(localStorage.getItem('userId')){
        this.islogin=true;
      }

      //监听事件
      window.onresize = ()=>{
        return(()=>{
          this.showHeight = document.documentElement.clientHeight || document.body.clientHeight;
        })()
      }
    }
  }
</script>
<style>
 /* @import url('../../../assets/less/vantstyle/toast.css');*/
</style>
<style scoped lang="less">
  /deep/.van-picker__cancel{
    color:#56B2AD;
  }
  /deep/.van-picker__confirm{
    color:#56B2AD;
  }
</style>
<style scoped lang="less">
  .fillsass {
    padding-bottom:2.6rem;
    font-size: 0.3rem;
    color: #777777;
    .filltop{
      height: 0.9rem;
      background: url("../../../assets/imgs/x_filltop.png");
      background-size: 100% 0.9rem;
      font-size: 0.32rem;
      font-weight: bold;
      color: white;
      line-height: 0.9rem;
      text-align: center;
    }
    .sasstop {
      line-height: 0.42rem;
      color: #F4793B;
      font-size: 0.26rem;
      height: 1.2rem;
      background: #FFF2EE;
      display: flex;
      justify-content: flex-start;

      img {
        margin-top: 0.24rem;
        margin-left: 0.3rem;
        width: 0.35rem;
        height: 0.35rem;
      }

      .sasstop_text {
        width: 6.39rem;
        margin-top: 0.18rem;
        margin-left: 0.14rem;
      }
    }
    .sass_tccx{
      margin: 0.36rem auto 0;
      width: 2.36rem;
      height: 0.59rem;
      img{
        width: 2.36rem;
        height: 0.59rem;
      }
    }
    .cqjz{

      .cqjz_title{
        font-weight: bold;
        color: #767777;
        padding-top: 0.5rem;
        padding-left: 0.5rem;
        height: 0.6rem;
      }
      .cqjzinput{
        line-height: 0.56rem;
        padding-left: 0.1rem;
        margin-top: 0.3rem;
        margin-left: 0.9rem;
        width: 5.28rem;
        height: 0.56rem;
        border: 0.02rem solid #B7B7B7;
        border-radius: 0.14rem;
        background: url("../../../assets/imgs/xfill1_address.png") no-repeat 4.84rem;
        background-size: 0.21rem 0.19rem;
      }
    }
    .line{
      margin-top: 0.57rem;
      height: 0.2rem;
      background: #F0F0F0;
    }
    .sassjourney {
      height: auto;

      .sass_tip {
        margin-left: 0.85rem;
        margin-top: 0.1rem;
        width: 5.2rem;
        height: 0.4rem;
        color: #F39800;
        font-size: 0.26rem;
      }
      .sassyq{
        margin-bottom: 0.2rem;
        margin-left: 1.3rem;
        width: 5.6rem;
        height: auto;
        font-size: 0.28rem;

        .sassyq_time{
          margin-bottom: 0.1rem;
          font-weight: bold;
          width: 2rem;
          height: 0.3rem;
        }
        .sassyq_area{
          margin-bottom: 0.1rem;
          width: 2.7rem;
          height: 0.3rem;
        }
        .sassyq_desc{
          width: 5.6rem;
          height: auto;
          display: flex;
          justify-content: space-between;
          .sassyq_desc_d{
            width: 4.7rem;
            height: auto;
          }
          img{
            width: 0.44rem;
            height: 0.44rem;
          }
        }

      }

      .select {
        margin-left: 0.7rem;
        margin-top: 0.3rem;
        display: flex;
        justify-content: flex-start;
        height: auto;

        img {
          width: 0.35rem;
          height: 0.35rem;
        }
      }
      .select_name1 {
        width: 6rem;
        height: 0.5rem;
        margin-left: 0.2rem;
        margin-top: -0.04rem;
      }
      .select_name2 {
          width: 6rem;
          height: 0.5rem;
          margin-left: 0.2rem;
          margin-top: -0.04rem;
        }
      .select_name3 {
        width: 6rem;
        height: 1.3rem;
        margin-left: 0.2rem;
        margin-top: -0.04rem;
      }
      .select_name4 {
        width: 6rem;
        height: 1.2rem;
        margin-left: 0.2rem;
        margin-top: -0.04rem;
      }

      .sassjourney_top {
        font-weight: bold;
        color: #767777;
        padding-top: 0.5rem;
        padding-left: 0.5rem;
        height: 0.6rem;

        .top_sass {
          float: right;
          margin-right: 0.7rem;
          width: 2.2rem;
          height: 0.5rem;
          //background: #007aff;
        }
      }

      .seleto {
        margin-left: 1.3rem;
        //margin-top: -0.6rem;
        width: 5rem;
        height: 5rem;
        .selectocityinp{
          margin: 0.2rem 0;
          width: 5.6rem;
          height: 0.7rem;
          display: flex;
          justify-content: space-between;
        }

        .selecto_city {
          line-height: 0.58rem;
          //margin: 0.2rem 0;
          padding-left: 0.2rem;
          width: 4.22rem;
          height: 0.58rem;
          border-radius: 0.08rem;
          border: 0.02rem solid #B4B4B6;
          background: url('../../../assets/imgs/xfill1_address.png') no-repeat 3.55rem;
          background-size: 0.21rem 0.19rem;

          input {
            width: 4rem;
            height: 0.5rem;
          }
        }
        .yqadd{
          margin-top: 0.1rem;
          width: 0.44rem;
          height: 0.44rem;
          background: url("../../../assets/imgs/x_fillsassadd.png");
          background-size: 0.44rem 0.44rem;
        }

        .select_time {
          margin: 0.3rem 0;
          width: 5rem;
          height: 0.6rem;
          display: flex;
          justify-content: space-between;

          .s_line {
            width: 0.95rem;
            height: 0.02rem;
            background: #8E8E90;
            margin-top: 0.24rem;
          }

          .select_time_o {
            line-height: 0.53rem;
            padding-left: 0.2rem;
            width: 1.6rem;
            height: 0.53rem;
            border-radius: 0.08rem;
            border: 0.02rem solid #B4B4B6;
            background: url("../../../assets/imgs/xfill1_date.png") no-repeat 1.3rem;
            background-size: 0.31rem 0.28rem;

            input {
              width: 0.9rem;
              height: 0.5rem;
            }
          }
        }
      }
      .select_desc3{
        margin-top: -30px;
        padding-left: 0.2rem;
        padding-top: 0.2rem;
        width: 5.46rem;
        height: 1.56rem;
        border-radius: 0.08rem;
        border: 0.02rem solid #B4B4B6;

        textarea {
          width: 5.46rem;
          height: 1.56rem;
        }
      }
      .select_desc2 {
        margin-top: 0.1rem;
        padding-left: 0.2rem;
        padding-top: 0.2rem;
        width: 5.46rem;
        height: 1.56rem;
        border-radius: 0.08rem;
        border: 0.02rem solid #B4B4B6;

        textarea {
          width: 5.24rem;
          height: 1.5rem;
        }
      }
      .select_desc {
        padding-left: 0.2rem;
        padding-top: 0.2rem;
        width: 5.46rem;
        height: 1.56rem;
        border-radius: 0.08rem;
        border: 0.02rem solid #B4B4B6;

        textarea {
          width: 5.24rem;
          height: 1.5rem;
        }
      }

      .selectt {
        margin-left: 1.3rem;
        margin-top: 0.1rem;
        width: 5rem;
        height: 1.8rem;
      }

      .selectth {
        margin-left: 1.3rem;
        margin-top: 0.7rem;
        width: 5rem;
        height: 1.8rem;
      }

      .selectf {
        margin-left: 1.3rem;
        margin-top: -0.2rem;
        width: 5rem;
        height: 1.8rem;
      }
    }

    .sasstip {
      margin: 0.4rem auto;
      width: 4.15rem;
      height: 0.3rem;
      color: #3FA998;
    }

    .fillbtn {
      position: fixed;
      bottom: 6%;
      width: 6.5rem;
      height: 0.7rem;
      display: flex;
      justify-content: space-between;
      // margin: 0.3rem auto 0;
      left: 50%;
      margin-left:-3.25rem;
      .fillzx {
        width: 3.1rem;
        height: 0.72rem;
        background: url("../../../assets/imgs/x_syb2.png") no-repeat;
        background-size: 3.1rem 0.72rem;
      }

      .fillnext {
        width: 3.1rem;
        height: 0.72rem;
        background: url("../../../assets/imgs/x_xyb2.png") no-repeat;
        background-size: 3.1rem 0.72rem;
      }
      .filltj{
        width: 3.1rem;
        height: 0.72rem;
        background: url("../../../assets/imgs/x_tj2.png") no-repeat;
        background-size: 3.1rem 0.72rem;
      }
    }
  }
</style>
